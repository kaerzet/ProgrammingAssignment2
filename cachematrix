## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
  # inv will store the cached inverse matrix
  inv <- NULL
  
  # Set for the matrix
  set <- function(y) {
    x <<- y
    inv <<- NULL
  }
  # Get for the matrix
  get <- function() x
  
  # Set for the inverse
  setinv <- function(inverse) inv <<- inverse
  # Get for the inverse
  getinv <- function() inv
  
  # Return the matrix with new defined functions
  list(set = set, get = get, setinv = setinv, getinv = getinv)
}


## Write a short comment describing this function

cacheSolve <- function(x, ...) {
  ## Return a matrix that is the inverse of 'x'
  inv <- x$getinv()
  
  # If the inverse is already calculated, return it
  if (!is.null(inv)) {
    message("getting cached data")
    return(inv)
  }
  
  # Calculation of the invertion
  data <- x$get()
  inv <- solve(data, ...)
  
  # Cache the inverse
  x$setinv(inv)
  
  # Return
  inv
}
